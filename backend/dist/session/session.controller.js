"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const express_1 = require("express");
const session_permissions_enum_1 = require("../seeder/enums/session-permissions.enum");
const param_id_dto_1 = require("../shared/dtos/requests/param-id.dto");
const authentication_middleware_1 = require("../shared/middlewares/authentication.middleware");
const authorization_middleware_1 = require("../shared/middlewares/authorization.middleware");
const data_validator_middleware_1 = require("../shared/middlewares/data-validator.middleware");
const response_formatter_middelware_1 = require("../shared/middlewares/response-formatter.middelware");
const create_session_dto_1 = require("./dto/request/create-session.dto");
const list_session_dto_1 = require("./dto/request/list-session.dto");
const update_session_dto_1 = require("./dto/request/update-session.dto");
const session_service_1 = require("./session.service");
const router = (0, express_1.Router)();
router.post("/create", authentication_middleware_1.Authentication, (0, authorization_middleware_1.Authorization)(session_permissions_enum_1.sessionPermissionsEnum.CREATE), create_session_dto_1.CreateSessionDto, data_validator_middleware_1.DataValidator, (0, response_formatter_middelware_1.ResponseFormatter)(session_service_1.createSession));
router.patch("/update/:id", authentication_middleware_1.Authentication, (0, authorization_middleware_1.Authorization)(session_permissions_enum_1.sessionPermissionsEnum.UPDATE), update_session_dto_1.UpdateSessionDto, data_validator_middleware_1.DataValidator, (0, response_formatter_middelware_1.ResponseFormatter)(session_service_1.updateSession));
router.get("/byId/:id", authentication_middleware_1.Authentication, (0, authorization_middleware_1.Authorization)(session_permissions_enum_1.sessionPermissionsEnum.FIND_ONE), param_id_dto_1.ParamIdDto, data_validator_middleware_1.DataValidator, (0, response_formatter_middelware_1.ResponseFormatter)(session_service_1.findOneSession));
router.get("/list", authentication_middleware_1.Authentication, (0, authorization_middleware_1.Authorization)(session_permissions_enum_1.sessionPermissionsEnum.LIST), list_session_dto_1.ListSessionDto, data_validator_middleware_1.DataValidator, (0, response_formatter_middelware_1.ResponseFormatter)(session_service_1.findAllSessions));
router.delete("/delete/:id", authentication_middleware_1.Authentication, (0, authorization_middleware_1.Authorization)(session_permissions_enum_1.sessionPermissionsEnum.DELETE), param_id_dto_1.ParamIdDto, data_validator_middleware_1.DataValidator, (0, response_formatter_middelware_1.ResponseFormatter)(session_service_1.deleteSession));
exports.default = router;
